// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                String  @id @default(uuid())
  email             String  @unique
  username          String
  provider          AuthProvider?
  createdAt         DateTime @default(now())
  whitePlayerGames  game[] @relation("whiteRel")
  blackPlayerGames  game[] @relation("blackRel")
}

model game {
  id            String @id @default(uuid())
  whitePlayer   user @relation(name: "whiteRel", fields: [whitePlayerId], references: [id])
  blackPlayer   user @relation(name: "blackRel", fields: [blackPlayerId], references: [id])
  whitePlayerId String
  blackPlayerId String
  status        GameStatus @default(IN_PROGRESS)
  result        GameResult?
  currentState  String @default("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  createdAt     DateTime @default(now())
  endedAt       DateTime?
  moves         move[]
}

model move {
  id         String @id @default(uuid())
  game       game @relation(fields: [gameId], references: [id])
  gameId     String
  from       String
  to         String
  createdAt  DateTime @default(now())
}

enum GameResult {
  WHITE
  BLACK
  DRAW
}
enum GameStatus {
  IN_PROGRESS
  DRAW
  ENDED
}
enum AuthProvider {
  GOOGLE
  GITHUB
}